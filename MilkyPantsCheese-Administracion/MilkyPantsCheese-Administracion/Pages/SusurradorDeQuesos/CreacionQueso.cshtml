@page

@using Castle.Core.Internal

@model MilkyPantsCheese.Pages.CreacionQuesoModel

@inject MilkyDbContext dbContext

@{
    @if (User.IsInRole(Constantes.NombreRolSusurradorDeQuesos))
    {
        var lotesQueso = (from c in dbContext.LotesDeQuesos select c).ToList();

        <div class="d-flex flex-column h-75 w-75 position-absolute" style="margin-right: auto; margin-left: auto; left: 0; right: 0;">

            <div class="p-2 border border-warning rounded">

                <div>
                    <h4 class="text-left">Nuevo queso:</h4>
                </div>

                <form method="post">

                    <!--Seleccion fecha y horario de finalizacion de curacion del queso-->
                    <div class="form-group">

                        <label asp-for="FechaFinalCurado"></label>
                        <input asp-for="FechaFinalCurado" type="date" class="form-control"/>

                    </div>

                    <!--Seleccion estado del queso-->
                    <div class="form-group">

                        <label asp-for="EstadoQueso"></label>
                        <select asp-for="EstadoQueso" asp-items="@Html.GetEnumSelectList<EEstadoQueso>()" class="custom-select"></select>

                        @Html.ValidationMessageFor(m => m.EstadoQueso, "", new { @class = "text-danger" })

                    </div>

                    <!--Peso del queso antes de que ser curado-->
                    <div class="form-group">

                        <label asp-for="PesoPreCurado"></label>
                        <input type="text" class="form-text" asp-for="PesoPreCurado" />

                        @Html.ValidationMessageFor(m => m.PesoPreCurado, "", new { @class = "text-danger" })

                    </div>

                    <!--Peso del queso despues de ser curado-->
                    <div class="form-group">

                        <label asp-for="PesoPostCurado"></label>
                        <input type="text" class="form-text" asp-for="PesoPostCurado" />

                        @Html.ValidationMessageFor(m => m.PesoPostCurado, "", new { @class = "text-danger" })

                    </div>

                    <!--Lote donde el queso sera almacenado-->
                    <div class="form-group mt-5">

                        <label asp-for="LoteId"></label>
                        <select asp-for="LoteId" asp-items="@SelectListItemHelpers.ToSelectListItemListLotesDeQueso(lotesQueso)" class="custom-select"></select>
     
                        @Html.ValidationMessageFor(m => m.LoteId, "", new { @class = "text-danger" })

                    </div>

                    <!--Boton submit-->
                    <div class="form-group mt-4">
                        <input type="submit" value="Crear" class="form-text btn btn-warning" />
                    </div>

                </form>

            </div>

            <div class="mt-3 p-2 border border-warning rounded">

                <div>
                    <h4 class="text-left">Queso:</h4>
                </div>

                @if (@Model.Quesos.IsNullOrEmpty())
                {
                    <label class="text-center">No hay quesos disponibles</label>
                }
                else
                {
                    <div>

                        <partial name="_ListaQuesos" />

                    </div>
                }

            </div>

        </div>

    }

}
