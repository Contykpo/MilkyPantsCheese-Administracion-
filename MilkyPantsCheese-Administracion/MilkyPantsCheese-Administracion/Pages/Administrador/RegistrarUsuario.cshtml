@page
@model MilkyPantsCheese.Pages.RegistrarUsuarioModel

<form method="post">

    @*Nombre del usuario*@
    <div class="form-group">

        <label asp-for="NombreUsuario"></label>
        <input asp-for="NombreUsuario" type="text" class="form-text" onchange="NombreNuevoUsuarioCambioHandler(this)" />
        @Html.ValidationMessageFor(m => m.NombreUsuario, string.Empty, new { @class = "text-danger" })

        <span id="mensajeErrorNombre" class="text-danger"></span>
    </div>

    @*Contraseña*@
    <div class="d-flex flex-row flex-wrap">

        <div class="form-group">
            <label asp-for="Contraseña"></label>
            <input asp-for="Contraseña" type="password" class="form-text" />
            @Html.ValidationMessageFor(m => m.Contraseña, string.Empty, new { @class = "text-danger d-inline-block", @style="max-width: 200px;"})
        </div>

        <div class="form-group ml-2 flex-sm-wrap">
            <label asp-for="ConfirmacionContraseña"></label>
            <input asp-for="ConfirmacionContraseña" type="password" class="form-text" />
            @Html.ValidationMessageFor(m => m.ConfirmacionContraseña, string.Empty, new { @class = "text-danger" })
        </div>
    </div>

    @*Seleccion tipo de usuario*@
    <div class="form-group">

        <label asp-for="TipoDeUsuarioSeleccionado"></label>
        <select asp-for="TipoDeUsuarioSeleccionado" asp-items="@Model.TiposUsuarioDisponibles" class="custom-select d-block" style="max-width: 300px;}"></select>

        @Html.ValidationMessageFor(u => u.TipoDeUsuarioSeleccionado, string.Empty, new { @class = "text-danger" })
    </div>

    @*Duracion de la sesion de este usuario*@
    <div class="form-group">

        <label asp-for="DuracionSesion" data-toggle="tooltip" data-placement="top" title="Duracion de la sesion del usuario en horas. Si se deja en cero la sesion no se cerrara nunca"></label>
        <input asp-for="DuracionSesion" type="time" class="" style="display: block;" />
        @Html.ValidationMessageFor(u => u.DuracionSesion, string.Empty, new { @class = "text-danger" })
    </div>

    <div class="d-flex flex-row flex-wrap">
        
        @*Boton registrar*@
        <input type="submit" class="btn btn-warning mt-5" value="Registrar Usuario"/>
        
        @*Boton cancelar*@
        <a asp-page="/Administrador/AdministrarUsuarios" class="text-danger align-self-end py-2 px-3">Cancelar</a>
    </div>

</form>

@section Scripts
{
    <script type="text/javascript">

        @*Inicializamos todos los tooltip de la pagina*@
        $("[data-toggle='tooltip']").tooltip();

        @*Funcion llamada cuando el nombre de usuario ingresado es modificado*@
        function NombreNuevoUsuarioCambioHandler(textbox) {

            @*Enviamos una solicitud de ajax al servidor para ver si ya existe un usuario con el nombre ingresado*@
            $.ajax({
                type: "get",
                url: "/Administrador/RegistrarUsuario?handler=ExisteUnUsuarioConEsteNombre&nombre=" + textbox.value,

                beforeSend: function(xhr) {
                     xhr.setRequestHeader("RequestVerificationToken", $('input:hidden[name="__RequestVerificationToken"]').val())
                },

                @*Si la solicitud tiene exito...*@
                success: function (resultado) {

                    @*Actualizamos el mensaje de error en el nombre de usuario en base al resultado*@
                    if (resultado === '@Constantes.TrueString') {
                        $('#mensajeErrorNombre').text("Ya existe un usuario con ese nombre");
                    } else {
                        $('#mensajeErrorNombre').text("");
                    }
                },
                failure: function () {

                    console.log("Ocurrio al intentar verificar la disponibilidad del nombre");
                },
            });
        }

    </script>
}
